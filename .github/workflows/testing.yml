name: Testing

on:
  workflow_dispatch:

jobs:
  compare-tags:
    runs-on: ubuntu-latest
    outputs:
      is-new-version: ${{ steps.compare.outputs.not_equal }}
      new-tag: ${{ steps.get_latest_tag.outputs.cimgui_tag }}

    steps:
      - uses: octokit/request-action@v2.x
        id: get_cimgui_tags
        with:
          route: GET /repos/cimgui/cimgui/git/refs/tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - uses: octokit/request-action@v2.x
        id: get_imgui_beef_tags
        with:
          route: GET /repos/roguemacro/imgui-beef/git/refs/tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Get latest tags
        id: get_latest_tag
        env:
          cimgui_tags: ${{ toJson(fromJson(steps.get_cimgui_tags.outputs.data).*.ref) }}
          imgui_beef_tags: ${{ toJson(fromJson(steps.get_imgui_beef_tags.outputs.data).*.ref) }}
        run: |
          # Get the version from the ref
          CT=$(echo $cimgui_tags | jq '. | .[-1] | .[10:]')
          # Remove quotes from env variable
          CT="${CT%\"}"
          CT="${CT#\"}"
          
          IBT=$(echo $imgui_beef_tags | jq '. | .[-1] | .[10:]')
          IBT="${IBT%\"}"
          IBT="${IBT#\"}"
            
          echo "::set-output name=cimgui_tag::$CT"
          echo "::set-output name=imgui_beef_tag::$IBT"
          
          echo $CT
          echo $IBT
          
      - name: Compare tags
        id: compare
        run: |
          NOT_EQ=${{ steps.get_latest_tag.outputs.cimgui_tag != steps.get_latest_tag.outputs.imgui_beef_tag }}
          echo "::set-output name=not_equal::$NOT_EQ"
        
  create-tag:
    runs-on: ubuntu-latest
    needs: [compare-tags]
    if: needs.compare-tags.outputs.is-new-version == 'true'
    
    steps:
      - uses: actions/checkout@v2
        
      - id: change-something 
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git rm README.md
          git commit -m "deleted readme"
          COMMIT_ID=$(git rev-parse HEAD)
          echo "::set-output name=commit-id::$COMMIT_ID"
          
    
      - name: Create tag
        uses: simpleactions/create-tag@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          sha: ${{ steps.change-something.outputs.commit-id }}
          tag: ${{ needs.compare-tags.outputs.new-tag }}
          message: ""
 

